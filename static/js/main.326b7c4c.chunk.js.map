{"version":3,"sources":["components/Team/TeamList/index.js","components/Team/TeamMember/TeamMember.jsx","constants/colors.js","components/Team/TeamList/TeamList.jsx","components/Team/Team.jsx","components/Publications/Publication/Publication.jsx","components/Publications/Publications.jsx","components/Insights/Insights.jsx","components/Scoring/Scoring.jsx","components/Azure/Azure.jsx","components/Layout/index.js","components/Layout/Layout.jsx","App.js","serviceWorker.js","index.js","assets/team_pics/maksim_bw.jpg","assets/team_pics/irina_bw.jpg","assets/team_pics/sergei_bw.jpeg","assets/team_pics/kirill_bw.jpg","assets/social/github.svg","assets/social/linkedin.svg","assets/publications/uplift-1.jpeg","assets/publications/uplift-pt-2.jpeg","assets/publications/sklift-logo.png","assets/publications/github.svg","assets/barcode.svg"],"names":["roles","ds","dev","pitch","fe","rs","presentation","management","members","id","img","maxImg","name","github","linkedin","description","irinaImg","sergeiImg","kirillImg","TeamMember","className","src","alt","dashed","orientation","style","borderColor","margin","lineHeight","map","role","color","fontSize","rolesDict","href","target","rel","linkedinIcon","githubIcon","TeamList","member","Team","Publication","source","title","text","isYellow","cn","yellow","Publications","top","left","width","uplift1","uplift2","sklift","Insights","Scoring","Azure","tabs","label","tabContent","team","publications","insights","scoring","azure","TabPane","Tabs","Layout","defaultActiveKey","useState","activeTab","setActiveTab","onChange","activeKey","tabPosition","tab","barcode","key","backgroundColor","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.326b7c4c.chunk.js","sourcesContent":["import maxImg from \"assets/team_pics/maksim_bw.jpg\";\nimport irinaImg from \"assets/team_pics/irina_bw.jpg\";\nimport sergeiImg from \"assets/team_pics/sergei_bw.jpeg\";\nimport kirillImg from \"assets/team_pics/kirill_bw.jpg\";\n\nexport const roles = {\n  ds: \"Data Science\",\n  dev: \"Разработка\",\n  pitch: \"Питч\",\n  fe: \"Frontend\",\n  rs: \"Research\",\n  presentation: \"Презентация\",\n  management: \"Управление командой\",\n};\n\nexport const members = [\n  {\n    id: \"maks\",\n    img: maxImg,\n    name: \"Максим Шевченко\",\n    roles: [\"ds\", \"pitch\", \"presentation\"],\n    github: \"https://github.com/maks-sh\",\n    linkedin: \"https://www.linkedin.com/in/maks-sh/\",\n    description: `Power Uplift'ер. Соавтор цикла статей на хабре «Туториал по uplift моделированию». Разработчик библиотеки scikit-uplift для моделирования uplift.`,\n  },\n  {\n    id: \"irina\",\n    img: irinaImg,\n    name: \"Ирина Елисова\",\n    roles: [\"ds\", \"presentation\", \"management\"],\n    github: \"https://github.com/ElisovaIra\",\n    linkedin: \"https://www.linkedin.com/in/irina-elisova-23b4b4bb/\",\n    description:\n      \"Предприниматель. Соавтор цикла статей на хабре «Туториал по uplift моделированию». Разработчик библиотеки scikit-uplift для моделирования uplift.\",\n  },\n  {\n    id: \"sergei\",\n    img: sergeiImg,\n    name: \"Сергей Курочкин\",\n    roles: [\"dev\", \"fe\"],\n    github: \"https://github.com/kurochkinSergei\",\n    description:\n      \"Javascript разработчик. Ниндзя React приложений с опытом разработки коммерческих решений в сфере bigdata.\",\n  },\n  {\n    id: \"sergei\",\n    img: kirillImg,\n    name: \"Кирилл Ликсаков\",\n    roles: [\"ds\", \"rs\"],\n    github: \"https://github.com/kirrlix1994\",\n    description:\n      \"Математик. Танцор. Разработчик библиотеки scikit-uplift для моделирования uplift.\",\n  },\n];\n","import React from \"react\";\nimport { roles as rolesDict } from \"../TeamList/index\";\nimport githubIcon from \"assets/social/github.svg\";\nimport linkedinIcon from \"assets/social/linkedin.svg\";\n\nimport { Tag, Divider } from \"antd\";\n\nimport \"./TeamMember.scss\";\nimport { white, elPurple, elYellow } from \"constants/colors\";\n\nconst TeamMember = ({\n  id,\n  name,\n  img,\n  roles,\n  description,\n  linkedin,\n  github,\n}) => {\n  return (\n    <div className=\"team-member\">\n      <div className=\"img-wrapper\">\n        <img src={img} alt={name} />\n      </div>\n      <div className=\"content\">\n        <div className=\"name\">{name}</div>\n        <Divider\n          dashed\n          orientation=\"left\"\n          style={{ borderColor: elYellow, margin: \"8px 0\" }}\n        />\n\n        <div style={{ lineHeight: \"28px\" }}>\n          {roles.map((role) => (\n            <Tag color={white} style={{ fontSize: 16, color: elPurple }}>\n              {rolesDict[role]}\n            </Tag>\n          ))}\n        </div>\n        <div className=\"description\">{description}</div>\n        <div className=\"social\">\n          {linkedin && (\n            <a href={linkedin} target=\"_blank\" rel=\"noopener noreferrer\">\n              <img className=\"social-icon\" src={linkedinIcon} alt=\"linkedin\" />\n            </a>\n          )}\n          <a href={github} target=\"_blank\" rel=\"noopener noreferrer\">\n            <img className=\"social-icon\" src={githubIcon} alt=\"github\" />\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TeamMember;\n","export const white = \"#ffffff\";\n\nexport const elPurple = \"#2d2784\";\nexport const elYellow = \"#f6dd00\";\nexport const elBrown = \"#6b2929\";\nexport const elBlue = \"#63b8f9\";\nexport const elRed = \"#d83a01\";\n","import React from \"react\";\nimport { members } from \"./index\";\nimport TeamMember from \"../TeamMember/TeamMember\";\n\nimport \"./TeamList.scss\";\n\nconst TeamList = () => {\n  return (\n    <div className=\"team-list\">\n      {members.map((member) => (\n        <TeamMember {...member} />\n      ))}\n    </div>\n  );\n};\n\nexport default TeamList;\n","import React from \"react\";\nimport TeamList from \"./TeamList/TeamList\";\n\nconst Team = () => {\n  return (\n    <>\n      <div className=\"content-header\">Команда barcode</div>\n      <TeamList />\n    </>\n  );\n};\n\nexport default Team;\n","import React from \"react\";\nimport cn from \"classnames\";\nimport \"./Publication.scss\";\n\nconst Publication = ({ href, source, title, text, style, img, isYellow }) => {\n  return (\n    <div\n      className={cn(\"publication\", {\n        yellow: isYellow,\n      })}\n      style={style}\n    >\n      <a href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n        <div>\n          <img className=\"img\" src={img} alt=\"uplift-pt-1\" />\n        </div>\n\n        <div className=\"description\">\n          <div className=\"source\">{source}</div>\n          <div className=\"title\">{title}</div>\n          <div className=\"text\">{text}</div>\n        </div>\n      </a>\n    </div>\n  );\n};\n\nexport default Publication;\n","import React from \"react\";\n\nimport uplift1 from \"assets/publications/uplift-1.jpeg\";\nimport uplift2 from \"assets/publications/uplift-pt-2.jpeg\";\nimport sklift from \"assets/publications/sklift-logo.png\";\nimport github from \"assets/publications/github.svg\";\n\nimport Publication from \"./Publication/Publication\";\n\nconst Publications = () => {\n  return (\n    <>\n      <div className=\"content-header\">Экспертиза uplift моделирования</div>\n\n      <div className=\"publications\">\n        <Publication\n          style={{\n            top: 96,\n            left: 126,\n            width: 580,\n          }}\n          href=\"https://habr.com/ru/company/ru_mts/blog/485980/\"\n          source=\"Хабр\"\n          title=\"Туториал по Uplift моделированию. Часть 1\"\n          img={uplift1}\n          text=\"Команда Big Data МТС активно извлекает знания из имеющихся\n          данных и решает большое количество задач для бизнеса. Один из\n          типов задач машинного обучения, с котор...\"\n        />\n\n        <Publication\n          style={{\n            width: 380,\n            top: 96 + 284 + 8,\n            left: 126,\n          }}\n          isYellow\n          href=\"https://habr.com/ru/company/ru_mts/blog/485976/\"\n          source=\"Хабр\"\n          title=\"Туториал по Uplift моделированию. Часть 2\"\n          img={uplift2}\n          text=\"В первой части мы познакомились с uplift моделированием и узнали, что метод позволяет выбирать оптимальную стратегию коммуникации с клиентом, а также разобрали...\"\n        />\n\n        <Publication\n          style={{\n            width: 286,\n            top: 96,\n            left: 126 + 8 + 580,\n          }}\n          href=\"https://habr.com/ru/company/ru_mts/blog/485976/\"\n          source=\"Docs\"\n          title=\"User guide for uplift modeling\"\n          img={sklift}\n          text=\"Uplift modeling estimates the effect of communication action on some customer outcome and gives an opportunity to efficiently target...\"\n        />\n\n        <Publication\n          style={{\n            width: 319,\n            top: 96 + 284 + 8,\n            left: 126 + 8 + 380,\n          }}\n          href=\"https://github.com/maks-sh/scikit-uplift\"\n          source=\"github\"\n          title=\"scikit-uplift\"\n          img={github}\n          text=\"scikit-uplift is a Python module for classic approaches for uplift modeling built on top of scikit-learn. Uplift prediction aims...\"\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Publications;\n","import React from \"react\";\n\nconst Insights = () => {\n  return <div className=\"content-header\">Инсайты</div>;\n};\n\nexport default Insights;\n","import React from \"react\";\n\nconst Scoring = () => {\n  return <div className=\"content-header\">Скоринг</div>;\n};\n\nexport default Scoring;\n","import React from \"react\";\n\nconst Azure = () => {\n  return <div className=\"content-header\">Эксперименты в Azure</div>;\n};\n\nexport default Azure;\n","import React from \"react\";\nimport Team from \"components/Team/Team\";\nimport Publications from \"components/Publications/Publications\";\nimport Insigths from \"components/Insights/Insights\";\nimport Scoring from \"components/Scoring/Scoring\";\nimport Azure from \"components/Azure/Azure\";\n\nexport const tabs = [\n  {\n    id: \"team\",\n    label: \"barcode\",\n  },\n  {\n    id: \"publications\",\n    label: \"Опыт\",\n  },\n  {\n    id: \"insights\",\n    label: \"Инсайты\",\n  },\n  {\n    id: \"scoring\",\n    label: \"Скоринг\",\n  },\n  {\n    id: \"azure\",\n    label: \"Azure ML\",\n  },\n];\n\nexport const tabContent = {\n  team: <Team />,\n  publications: <Publications />,\n  insights: <Insigths />,\n  scoring: <Scoring />,\n  azure: <Azure />,\n};\n","import React, { useState } from \"react\";\nimport { tabs, tabContent } from \"./index\";\nimport { elPurple, white } from \"constants/colors\";\n\nimport barcode from \"assets/barcode.svg\";\n\nimport \"./Layout.scss\";\nimport { Tabs } from \"antd\";\nconst { TabPane } = Tabs;\n\nconst Layout = () => {\n  // const tab = parseUrl\n  const defaultActiveKey = tabs[0].id;\n  const [activeTab, setActiveTab] = useState(defaultActiveKey);\n\n  return (\n    <div className=\"layout\">\n      {/* <img className=\"barcode\" src={barcode} alt=\"barcode\" /> */}\n      <div className=\"tabbar\">\n        <Tabs\n          defaultActiveKey={defaultActiveKey}\n          onChange={(activeKey) => setActiveTab(activeKey)}\n          tabPosition=\"right\"\n        >\n          {tabs.map((tab) => (\n            <TabPane\n              tab={\n                tab.id === \"team\" ? (\n                  <img src={barcode} className=\"barcode\" alt=\"barcode\" />\n                ) : (\n                  tab.label\n                )\n              }\n              key={tab.id}\n            />\n          ))}\n        </Tabs>\n      </div>\n      <div\n        className=\"tab-content\"\n        style={{\n          backgroundColor: activeTab === \"team\" ? elPurple : white,\n        }}\n      >\n        {tabContent[activeTab]}\n      </div>\n    </div>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport Layout from \"./components/Layout/Layout\";\n\nimport \"./App.less\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/maksim_bw.bf0d1fc4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/irina_bw.589b6a07.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sergei_bw.1a1c16a9.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/kirill_bw.b991285e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/github.c4cfcd0f.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.c0e50673.svg\";","module.exports = __webpack_public_path__ + \"static/media/uplift-1.00c16ca9.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/uplift-pt-2.0a4a2ba9.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/sklift-logo.df79b174.png\";","module.exports = __webpack_public_path__ + \"static/media/github.dc1b4783.svg\";","module.exports = __webpack_public_path__ + \"static/media/barcode.8f29825d.svg\";"],"sourceRoot":""}